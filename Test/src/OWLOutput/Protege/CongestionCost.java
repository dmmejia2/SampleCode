package Protege;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: CongestionCost <br>
 * @version generated on Mon Mar 06 21:12:30 MST 2017 by danielmejia
 */

public interface CongestionCost extends WrappedIndividual {

    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#coversArea
     */
     
    /**
     * Gets all property values for the coversArea property.<p>
     * 
     * @returns a collection of values for the coversArea property.
     */
    Collection<? extends GeographicalArea> getCoversArea();

    /**
     * Checks if the class has a coversArea property value.<p>
     * 
     * @return true if there is a coversArea property value.
     */
    boolean hasCoversArea();

    /**
     * Adds a coversArea property value.<p>
     * 
     * @param newCoversArea the coversArea property value to be added
     */
    void addCoversArea(GeographicalArea newCoversArea);

    /**
     * Removes a coversArea property value.<p>
     * 
     * @param oldCoversArea the coversArea property value to be removed.
     */
    void removeCoversArea(GeographicalArea oldCoversArea);


    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#isIndicatorOf
     */
     
    /**
     * Gets all property values for the isIndicatorOf property.<p>
     * 
     * @returns a collection of values for the isIndicatorOf property.
     */
    Collection<? extends WrappedIndividual> getIsIndicatorOf();

    /**
     * Checks if the class has a isIndicatorOf property value.<p>
     * 
     * @return true if there is a isIndicatorOf property value.
     */
    boolean hasIsIndicatorOf();

    /**
     * Adds a isIndicatorOf property value.<p>
     * 
     * @param newIsIndicatorOf the isIndicatorOf property value to be added
     */
    void addIsIndicatorOf(WrappedIndividual newIsIndicatorOf);

    /**
     * Removes a isIndicatorOf property value.<p>
     * 
     * @param oldIsIndicatorOf the isIndicatorOf property value to be removed.
     */
    void removeIsIndicatorOf(WrappedIndividual oldIsIndicatorOf);


    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasCommuterStressIndex.Value
     */
     
    /**
     * Gets all property values for the hasCommuterStressIndex.Value property.<p>
     * 
     * @returns a collection of values for the hasCommuterStressIndex.Value property.
     */
    Collection<? extends Object> getHasCommuterStressIndex.Value();

    /**
     * Checks if the class has a hasCommuterStressIndex.Value property value.<p>
     * 
     * @return true if there is a hasCommuterStressIndex.Value property value.
     */
    boolean hasHasCommuterStressIndex.Value();

    /**
     * Adds a hasCommuterStressIndex.Value property value.<p>
     * 
     * @param newHasCommuterStressIndex.Value the hasCommuterStressIndex.Value property value to be added
     */
    void addHasCommuterStressIndex.Value(Object newHasCommuterStressIndex.Value);

    /**
     * Removes a hasCommuterStressIndex.Value property value.<p>
     * 
     * @param oldHasCommuterStressIndex.Value the hasCommuterStressIndex.Value property value to be removed.
     */
    void removeHasCommuterStressIndex.Value(Object oldHasCommuterStressIndex.Value);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasCommuterStressIndex.id
     */
     
    /**
     * Gets all property values for the hasCommuterStressIndex.id property.<p>
     * 
     * @returns a collection of values for the hasCommuterStressIndex.id property.
     */
    Collection<? extends Integer> getHasCommuterStressIndex.id();

    /**
     * Checks if the class has a hasCommuterStressIndex.id property value.<p>
     * 
     * @return true if there is a hasCommuterStressIndex.id property value.
     */
    boolean hasHasCommuterStressIndex.id();

    /**
     * Adds a hasCommuterStressIndex.id property value.<p>
     * 
     * @param newHasCommuterStressIndex.id the hasCommuterStressIndex.id property value to be added
     */
    void addHasCommuterStressIndex.id(Integer newHasCommuterStressIndex.id);

    /**
     * Removes a hasCommuterStressIndex.id property value.<p>
     * 
     * @param oldHasCommuterStressIndex.id the hasCommuterStressIndex.id property value to be removed.
     */
    void removeHasCommuterStressIndex.id(Integer oldHasCommuterStressIndex.id);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasCongestionCost
     */
     
    /**
     * Gets all property values for the hasCongestionCost property.<p>
     * 
     * @returns a collection of values for the hasCongestionCost property.
     */
    Collection<? extends Integer> getHasCongestionCost();

    /**
     * Checks if the class has a hasCongestionCost property value.<p>
     * 
     * @return true if there is a hasCongestionCost property value.
     */
    boolean hasHasCongestionCost();

    /**
     * Adds a hasCongestionCost property value.<p>
     * 
     * @param newHasCongestionCost the hasCongestionCost property value to be added
     */
    void addHasCongestionCost(Integer newHasCongestionCost);

    /**
     * Removes a hasCongestionCost property value.<p>
     * 
     * @param oldHasCongestionCost the hasCongestionCost property value to be removed.
     */
    void removeHasCongestionCost(Integer oldHasCongestionCost);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasCongestionCost.id
     */
     
    /**
     * Gets all property values for the hasCongestionCost.id property.<p>
     * 
     * @returns a collection of values for the hasCongestionCost.id property.
     */
    Collection<? extends Integer> getHasCongestionCost.id();

    /**
     * Checks if the class has a hasCongestionCost.id property value.<p>
     * 
     * @return true if there is a hasCongestionCost.id property value.
     */
    boolean hasHasCongestionCost.id();

    /**
     * Adds a hasCongestionCost.id property value.<p>
     * 
     * @param newHasCongestionCost.id the hasCongestionCost.id property value to be added
     */
    void addHasCongestionCost.id(Integer newHasCongestionCost.id);

    /**
     * Removes a hasCongestionCost.id property value.<p>
     * 
     * @param oldHasCongestionCost.id the hasCongestionCost.id property value to be removed.
     */
    void removeHasCongestionCost.id(Integer oldHasCongestionCost.id);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasCongestionTime.RushHours
     */
     
    /**
     * Gets all property values for the hasCongestionTime.RushHours property.<p>
     * 
     * @returns a collection of values for the hasCongestionTime.RushHours property.
     */
    Collection<? extends Object> getHasCongestionTime.RushHours();

    /**
     * Checks if the class has a hasCongestionTime.RushHours property value.<p>
     * 
     * @return true if there is a hasCongestionTime.RushHours property value.
     */
    boolean hasHasCongestionTime.RushHours();

    /**
     * Adds a hasCongestionTime.RushHours property value.<p>
     * 
     * @param newHasCongestionTime.RushHours the hasCongestionTime.RushHours property value to be added
     */
    void addHasCongestionTime.RushHours(Object newHasCongestionTime.RushHours);

    /**
     * Removes a hasCongestionTime.RushHours property value.<p>
     * 
     * @param oldHasCongestionTime.RushHours the hasCongestionTime.RushHours property value to be removed.
     */
    void removeHasCongestionTime.RushHours(Object oldHasCongestionTime.RushHours);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasCongestionTime.id
     */
     
    /**
     * Gets all property values for the hasCongestionTime.id property.<p>
     * 
     * @returns a collection of values for the hasCongestionTime.id property.
     */
    Collection<? extends Integer> getHasCongestionTime.id();

    /**
     * Checks if the class has a hasCongestionTime.id property value.<p>
     * 
     * @return true if there is a hasCongestionTime.id property value.
     */
    boolean hasHasCongestionTime.id();

    /**
     * Adds a hasCongestionTime.id property value.<p>
     * 
     * @param newHasCongestionTime.id the hasCongestionTime.id property value to be added
     */
    void addHasCongestionTime.id(Integer newHasCongestionTime.id);

    /**
     * Removes a hasCongestionTime.id property value.<p>
     * 
     * @param oldHasCongestionTime.id the hasCongestionTime.id property value to be removed.
     */
    void removeHasCongestionTime.id(Integer oldHasCongestionTime.id);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasFatalIncident.id
     */
     
    /**
     * Gets all property values for the hasFatalIncident.id property.<p>
     * 
     * @returns a collection of values for the hasFatalIncident.id property.
     */
    Collection<? extends Integer> getHasFatalIncident.id();

    /**
     * Checks if the class has a hasFatalIncident.id property value.<p>
     * 
     * @return true if there is a hasFatalIncident.id property value.
     */
    boolean hasHasFatalIncident.id();

    /**
     * Adds a hasFatalIncident.id property value.<p>
     * 
     * @param newHasFatalIncident.id the hasFatalIncident.id property value to be added
     */
    void addHasFatalIncident.id(Integer newHasFatalIncident.id);

    /**
     * Removes a hasFatalIncident.id property value.<p>
     * 
     * @param oldHasFatalIncident.id the hasFatalIncident.id property value to be removed.
     */
    void removeHasFatalIncident.id(Integer oldHasFatalIncident.id);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasGasEmission.id
     */
     
    /**
     * Gets all property values for the hasGasEmission.id property.<p>
     * 
     * @returns a collection of values for the hasGasEmission.id property.
     */
    Collection<? extends Integer> getHasGasEmission.id();

    /**
     * Checks if the class has a hasGasEmission.id property value.<p>
     * 
     * @return true if there is a hasGasEmission.id property value.
     */
    boolean hasHasGasEmission.id();

    /**
     * Adds a hasGasEmission.id property value.<p>
     * 
     * @param newHasGasEmission.id the hasGasEmission.id property value to be added
     */
    void addHasGasEmission.id(Integer newHasGasEmission.id);

    /**
     * Removes a hasGasEmission.id property value.<p>
     * 
     * @param oldHasGasEmission.id the hasGasEmission.id property value to be removed.
     */
    void removeHasGasEmission.id(Integer oldHasGasEmission.id);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasGasEmmission.Value
     */
     
    /**
     * Gets all property values for the hasGasEmmission.Value property.<p>
     * 
     * @returns a collection of values for the hasGasEmmission.Value property.
     */
    Collection<? extends Object> getHasGasEmmission.Value();

    /**
     * Checks if the class has a hasGasEmmission.Value property value.<p>
     * 
     * @return true if there is a hasGasEmmission.Value property value.
     */
    boolean hasHasGasEmmission.Value();

    /**
     * Adds a hasGasEmmission.Value property value.<p>
     * 
     * @param newHasGasEmmission.Value the hasGasEmmission.Value property value to be added
     */
    void addHasGasEmmission.Value(Object newHasGasEmmission.Value);

    /**
     * Removes a hasGasEmmission.Value property value.<p>
     * 
     * @param oldHasGasEmmission.Value the hasGasEmmission.Value property value to be removed.
     */
    void removeHasGasEmmission.Value(Object oldHasGasEmmission.Value);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasLocation
     */
     
    /**
     * Gets all property values for the hasLocation property.<p>
     * 
     * @returns a collection of values for the hasLocation property.
     */
    Collection<? extends Object> getHasLocation();

    /**
     * Checks if the class has a hasLocation property value.<p>
     * 
     * @return true if there is a hasLocation property value.
     */
    boolean hasHasLocation();

    /**
     * Adds a hasLocation property value.<p>
     * 
     * @param newHasLocation the hasLocation property value to be added
     */
    void addHasLocation(Object newHasLocation);

    /**
     * Removes a hasLocation property value.<p>
     * 
     * @param oldHasLocation the hasLocation property value to be removed.
     */
    void removeHasLocation(Object oldHasLocation);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasTime
     */
     
    /**
     * Gets all property values for the hasTime property.<p>
     * 
     * @returns a collection of values for the hasTime property.
     */
    Collection<? extends Object> getHasTime();

    /**
     * Checks if the class has a hasTime property value.<p>
     * 
     * @return true if there is a hasTime property value.
     */
    boolean hasHasTime();

    /**
     * Adds a hasTime property value.<p>
     * 
     * @param newHasTime the hasTime property value to be added
     */
    void addHasTime(Object newHasTime);

    /**
     * Removes a hasTime property value.<p>
     * 
     * @param oldHasTime the hasTime property value to be removed.
     */
    void removeHasTime(Object oldHasTime);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasUnit
     */
     
    /**
     * Gets all property values for the hasUnit property.<p>
     * 
     * @returns a collection of values for the hasUnit property.
     */
    Collection<? extends Object> getHasUnit();

    /**
     * Checks if the class has a hasUnit property value.<p>
     * 
     * @return true if there is a hasUnit property value.
     */
    boolean hasHasUnit();

    /**
     * Adds a hasUnit property value.<p>
     * 
     * @param newHasUnit the hasUnit property value to be added
     */
    void addHasUnit(Object newHasUnit);

    /**
     * Removes a hasUnit property value.<p>
     * 
     * @param oldHasUnit the hasUnit property value to be removed.
     */
    void removeHasUnit(Object oldHasUnit);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasValue
     */
     
    /**
     * Gets all property values for the hasValue property.<p>
     * 
     * @returns a collection of values for the hasValue property.
     */
    Collection<? extends Object> getHasValue();

    /**
     * Checks if the class has a hasValue property value.<p>
     * 
     * @return true if there is a hasValue property value.
     */
    boolean hasHasValue();

    /**
     * Adds a hasValue property value.<p>
     * 
     * @param newHasValue the hasValue property value to be added
     */
    void addHasValue(Object newHasValue);

    /**
     * Removes a hasValue property value.<p>
     * 
     * @param oldHasValue the hasValue property value to be removed.
     */
    void removeHasValue(Object oldHasValue);



    /* ***************************************************
     * Property http://anonymous.org/resource/fpFreighPerformanceMetrics.owl#hasWeatherConditionID.ID
     */
     
    /**
     * Gets all property values for the hasWeatherConditionID.ID property.<p>
     * 
     * @returns a collection of values for the hasWeatherConditionID.ID property.
     */
    Collection<? extends String> getHasWeatherConditionID.ID();

    /**
     * Checks if the class has a hasWeatherConditionID.ID property value.<p>
     * 
     * @return true if there is a hasWeatherConditionID.ID property value.
     */
    boolean hasHasWeatherConditionID.ID();

    /**
     * Adds a hasWeatherConditionID.ID property value.<p>
     * 
     * @param newHasWeatherConditionID.ID the hasWeatherConditionID.ID property value to be added
     */
    void addHasWeatherConditionID.ID(String newHasWeatherConditionID.ID);

    /**
     * Removes a hasWeatherConditionID.ID property value.<p>
     * 
     * @param oldHasWeatherConditionID.ID the hasWeatherConditionID.ID property value to be removed.
     */
    void removeHasWeatherConditionID.ID(String oldHasWeatherConditionID.ID);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
