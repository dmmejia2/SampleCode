package Protege;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: External <br>
 * @version generated on Thu Nov 16 09:04:53 MST 2017 by danielmejia
 */

public interface External extends Person {

    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#contains
     */
     
    /**
     * Gets all property values for the contains property.<p>
     * 
     * @returns a collection of values for the contains property.
     */
    Collection<? extends WrappedIndividual> getContains();

    /**
     * Checks if the class has a contains property value.<p>
     * 
     * @return true if there is a contains property value.
     */
    boolean hasContains();

    /**
     * Adds a contains property value.<p>
     * 
     * @param newContains the contains property value to be added
     */
    void addContains(WrappedIndividual newContains);

    /**
     * Removes a contains property value.<p>
     * 
     * @param oldContains the contains property value to be removed.
     */
    void removeContains(WrappedIndividual oldContains);


    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#has
     */
     
    /**
     * Gets all property values for the has property.<p>
     * 
     * @returns a collection of values for the has property.
     */
    Collection<? extends WrappedIndividual> getHas();

    /**
     * Checks if the class has a has property value.<p>
     * 
     * @return true if there is a has property value.
     */
    boolean hasHas();

    /**
     * Adds a has property value.<p>
     * 
     * @param newHas the has property value to be added
     */
    void addHas(WrappedIndividual newHas);

    /**
     * Removes a has property value.<p>
     * 
     * @param oldHas the has property value to be removed.
     */
    void removeHas(WrappedIndividual oldHas);


    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasAge
     */
     
    /**
     * Gets all property values for the hasAge property.<p>
     * 
     * @returns a collection of values for the hasAge property.
     */
    Collection<? extends Integer> getHasAge();

    /**
     * Checks if the class has a hasAge property value.<p>
     * 
     * @return true if there is a hasAge property value.
     */
    boolean hasHasAge();

    /**
     * Adds a hasAge property value.<p>
     * 
     * @param newHasAge the hasAge property value to be added
     */
    void addHasAge(Integer newHasAge);

    /**
     * Removes a hasAge property value.<p>
     * 
     * @param oldHasAge the hasAge property value to be removed.
     */
    void removeHasAge(Integer oldHasAge);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasAlcohol
     */
     
    /**
     * Gets all property values for the hasAlcohol property.<p>
     * 
     * @returns a collection of values for the hasAlcohol property.
     */
    Collection<? extends Object> getHasAlcohol();

    /**
     * Checks if the class has a hasAlcohol property value.<p>
     * 
     * @return true if there is a hasAlcohol property value.
     */
    boolean hasHasAlcohol();

    /**
     * Adds a hasAlcohol property value.<p>
     * 
     * @param newHasAlcohol the hasAlcohol property value to be added
     */
    void addHasAlcohol(Object newHasAlcohol);

    /**
     * Removes a hasAlcohol property value.<p>
     * 
     * @param oldHasAlcohol the hasAlcohol property value to be removed.
     */
    void removeHasAlcohol(Object oldHasAlcohol);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasAlcoholBloodContent
     */
     
    /**
     * Gets all property values for the hasAlcoholBloodContent property.<p>
     * 
     * @returns a collection of values for the hasAlcoholBloodContent property.
     */
    Collection<? extends Object> getHasAlcoholBloodContent();

    /**
     * Checks if the class has a hasAlcoholBloodContent property value.<p>
     * 
     * @return true if there is a hasAlcoholBloodContent property value.
     */
    boolean hasHasAlcoholBloodContent();

    /**
     * Adds a hasAlcoholBloodContent property value.<p>
     * 
     * @param newHasAlcoholBloodContent the hasAlcoholBloodContent property value to be added
     */
    void addHasAlcoholBloodContent(Object newHasAlcoholBloodContent);

    /**
     * Removes a hasAlcoholBloodContent property value.<p>
     * 
     * @param oldHasAlcoholBloodContent the hasAlcoholBloodContent property value to be removed.
     */
    void removeHasAlcoholBloodContent(Object oldHasAlcoholBloodContent);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasAlcoholResult
     */
     
    /**
     * Gets all property values for the hasAlcoholResult property.<p>
     * 
     * @returns a collection of values for the hasAlcoholResult property.
     */
    Collection<? extends Object> getHasAlcoholResult();

    /**
     * Checks if the class has a hasAlcoholResult property value.<p>
     * 
     * @return true if there is a hasAlcoholResult property value.
     */
    boolean hasHasAlcoholResult();

    /**
     * Adds a hasAlcoholResult property value.<p>
     * 
     * @param newHasAlcoholResult the hasAlcoholResult property value to be added
     */
    void addHasAlcoholResult(Object newHasAlcoholResult);

    /**
     * Removes a hasAlcoholResult property value.<p>
     * 
     * @param oldHasAlcoholResult the hasAlcoholResult property value to be removed.
     */
    void removeHasAlcoholResult(Object oldHasAlcoholResult);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasAlcoholSpecimanType
     */
     
    /**
     * Gets all property values for the hasAlcoholSpecimanType property.<p>
     * 
     * @returns a collection of values for the hasAlcoholSpecimanType property.
     */
    Collection<? extends Integer> getHasAlcoholSpecimanType();

    /**
     * Checks if the class has a hasAlcoholSpecimanType property value.<p>
     * 
     * @return true if there is a hasAlcoholSpecimanType property value.
     */
    boolean hasHasAlcoholSpecimanType();

    /**
     * Adds a hasAlcoholSpecimanType property value.<p>
     * 
     * @param newHasAlcoholSpecimanType the hasAlcoholSpecimanType property value to be added
     */
    void addHasAlcoholSpecimanType(Integer newHasAlcoholSpecimanType);

    /**
     * Removes a hasAlcoholSpecimanType property value.<p>
     * 
     * @param oldHasAlcoholSpecimanType the hasAlcoholSpecimanType property value to be removed.
     */
    void removeHasAlcoholSpecimanType(Integer oldHasAlcoholSpecimanType);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasDeployedAirbag
     */
     
    /**
     * Gets all property values for the hasDeployedAirbag property.<p>
     * 
     * @returns a collection of values for the hasDeployedAirbag property.
     */
    Collection<? extends Integer> getHasDeployedAirbag();

    /**
     * Checks if the class has a hasDeployedAirbag property value.<p>
     * 
     * @return true if there is a hasDeployedAirbag property value.
     */
    boolean hasHasDeployedAirbag();

    /**
     * Adds a hasDeployedAirbag property value.<p>
     * 
     * @param newHasDeployedAirbag the hasDeployedAirbag property value to be added
     */
    void addHasDeployedAirbag(Integer newHasDeployedAirbag);

    /**
     * Removes a hasDeployedAirbag property value.<p>
     * 
     * @param oldHasDeployedAirbag the hasDeployedAirbag property value to be removed.
     */
    void removeHasDeployedAirbag(Integer oldHasDeployedAirbag);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasGender
     */
     
    /**
     * Gets all property values for the hasGender property.<p>
     * 
     * @returns a collection of values for the hasGender property.
     */
    Collection<? extends Integer> getHasGender();

    /**
     * Checks if the class has a hasGender property value.<p>
     * 
     * @return true if there is a hasGender property value.
     */
    boolean hasHasGender();

    /**
     * Adds a hasGender property value.<p>
     * 
     * @param newHasGender the hasGender property value to be added
     */
    void addHasGender(Integer newHasGender);

    /**
     * Removes a hasGender property value.<p>
     * 
     * @param oldHasGender the hasGender property value to be removed.
     */
    void removeHasGender(Integer oldHasGender);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasHelmet
     */
     
    /**
     * Gets all property values for the hasHelmet property.<p>
     * 
     * @returns a collection of values for the hasHelmet property.
     */
    Collection<? extends Integer> getHasHelmet();

    /**
     * Checks if the class has a hasHelmet property value.<p>
     * 
     * @return true if there is a hasHelmet property value.
     */
    boolean hasHasHelmet();

    /**
     * Adds a hasHelmet property value.<p>
     * 
     * @param newHasHelmet the hasHelmet property value to be added
     */
    void addHasHelmet(Integer newHasHelmet);

    /**
     * Removes a hasHelmet property value.<p>
     * 
     * @param oldHasHelmet the hasHelmet property value to be removed.
     */
    void removeHasHelmet(Integer oldHasHelmet);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasInjury
     */
     
    /**
     * Gets all property values for the hasInjury property.<p>
     * 
     * @returns a collection of values for the hasInjury property.
     */
    Collection<? extends Integer> getHasInjury();

    /**
     * Checks if the class has a hasInjury property value.<p>
     * 
     * @return true if there is a hasInjury property value.
     */
    boolean hasHasInjury();

    /**
     * Adds a hasInjury property value.<p>
     * 
     * @param newHasInjury the hasInjury property value to be added
     */
    void addHasInjury(Integer newHasInjury);

    /**
     * Removes a hasInjury property value.<p>
     * 
     * @param oldHasInjury the hasInjury property value to be removed.
     */
    void removeHasInjury(Integer oldHasInjury);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasInjurySeverity
     */
     
    /**
     * Gets all property values for the hasInjurySeverity property.<p>
     * 
     * @returns a collection of values for the hasInjurySeverity property.
     */
    Collection<? extends Integer> getHasInjurySeverity();

    /**
     * Checks if the class has a hasInjurySeverity property value.<p>
     * 
     * @return true if there is a hasInjurySeverity property value.
     */
    boolean hasHasInjurySeverity();

    /**
     * Adds a hasInjurySeverity property value.<p>
     * 
     * @param newHasInjurySeverity the hasInjurySeverity property value to be added
     */
    void addHasInjurySeverity(Integer newHasInjurySeverity);

    /**
     * Removes a hasInjurySeverity property value.<p>
     * 
     * @param oldHasInjurySeverity the hasInjurySeverity property value to be removed.
     */
    void removeHasInjurySeverity(Integer oldHasInjurySeverity);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#isPersonType
     */
     
    /**
     * Gets all property values for the isPersonType property.<p>
     * 
     * @returns a collection of values for the isPersonType property.
     */
    Collection<? extends Integer> getIsPersonType();

    /**
     * Checks if the class has a isPersonType property value.<p>
     * 
     * @return true if there is a isPersonType property value.
     */
    boolean hasIsPersonType();

    /**
     * Adds a isPersonType property value.<p>
     * 
     * @param newIsPersonType the isPersonType property value to be added
     */
    void addIsPersonType(Integer newIsPersonType);

    /**
     * Removes a isPersonType property value.<p>
     * 
     * @param oldIsPersonType the isPersonType property value to be removed.
     */
    void removeIsPersonType(Integer oldIsPersonType);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
