package Protege;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Incident <br>
 * @version generated on Thu Nov 16 09:04:53 MST 2017 by danielmejia
 */

public interface Incident extends WrappedIndividual {

    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#contains
     */
     
    /**
     * Gets all property values for the contains property.<p>
     * 
     * @returns a collection of values for the contains property.
     */
    Collection<? extends WrappedIndividual> getContains();

    /**
     * Checks if the class has a contains property value.<p>
     * 
     * @return true if there is a contains property value.
     */
    boolean hasContains();

    /**
     * Adds a contains property value.<p>
     * 
     * @param newContains the contains property value to be added
     */
    void addContains(WrappedIndividual newContains);

    /**
     * Removes a contains property value.<p>
     * 
     * @param oldContains the contains property value to be removed.
     */
    void removeContains(WrappedIndividual oldContains);


    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#has
     */
     
    /**
     * Gets all property values for the has property.<p>
     * 
     * @returns a collection of values for the has property.
     */
    Collection<? extends WrappedIndividual> getHas();

    /**
     * Checks if the class has a has property value.<p>
     * 
     * @return true if there is a has property value.
     */
    boolean hasHas();

    /**
     * Adds a has property value.<p>
     * 
     * @param newHas the has property value to be added
     */
    void addHas(WrappedIndividual newHas);

    /**
     * Removes a has property value.<p>
     * 
     * @param oldHas the has property value to be removed.
     */
    void removeHas(WrappedIndividual oldHas);


    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#involves
     */
     
    /**
     * Gets all property values for the involves property.<p>
     * 
     * @returns a collection of values for the involves property.
     */
    Collection<? extends Person> getInvolves();

    /**
     * Checks if the class has a involves property value.<p>
     * 
     * @return true if there is a involves property value.
     */
    boolean hasInvolves();

    /**
     * Adds a involves property value.<p>
     * 
     * @param newInvolves the involves property value to be added
     */
    void addInvolves(Person newInvolves);

    /**
     * Removes a involves property value.<p>
     * 
     * @param oldInvolves the involves property value to be removed.
     */
    void removeInvolves(Person oldInvolves);


    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#has1000DollarDamage
     */
     
    /**
     * Gets all property values for the has1000DollarDamage property.<p>
     * 
     * @returns a collection of values for the has1000DollarDamage property.
     */
    Collection<? extends Integer> getHas1000DollarDamage();

    /**
     * Checks if the class has a has1000DollarDamage property value.<p>
     * 
     * @return true if there is a has1000DollarDamage property value.
     */
    boolean hasHas1000DollarDamage();

    /**
     * Adds a has1000DollarDamage property value.<p>
     * 
     * @param newHas1000DollarDamage the has1000DollarDamage property value to be added
     */
    void addHas1000DollarDamage(Integer newHas1000DollarDamage);

    /**
     * Removes a has1000DollarDamage property value.<p>
     * 
     * @param oldHas1000DollarDamage the has1000DollarDamage property value to be removed.
     */
    void removeHas1000DollarDamage(Integer oldHas1000DollarDamage);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasCMVFlag
     */
     
    /**
     * Gets all property values for the hasCMVFlag property.<p>
     * 
     * @returns a collection of values for the hasCMVFlag property.
     */
    Collection<? extends Integer> getHasCMVFlag();

    /**
     * Checks if the class has a hasCMVFlag property value.<p>
     * 
     * @return true if there is a hasCMVFlag property value.
     */
    boolean hasHasCMVFlag();

    /**
     * Adds a hasCMVFlag property value.<p>
     * 
     * @param newHasCMVFlag the hasCMVFlag property value to be added
     */
    void addHasCMVFlag(Integer newHasCMVFlag);

    /**
     * Removes a hasCMVFlag property value.<p>
     * 
     * @param oldHasCMVFlag the hasCMVFlag property value to be removed.
     */
    void removeHasCMVFlag(Integer oldHasCMVFlag);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasCity
     */
     
    /**
     * Gets all property values for the hasCity property.<p>
     * 
     * @returns a collection of values for the hasCity property.
     */
    Collection<? extends String> getHasCity();

    /**
     * Checks if the class has a hasCity property value.<p>
     * 
     * @return true if there is a hasCity property value.
     */
    boolean hasHasCity();

    /**
     * Adds a hasCity property value.<p>
     * 
     * @param newHasCity the hasCity property value to be added
     */
    void addHasCity(String newHasCity);

    /**
     * Removes a hasCity property value.<p>
     * 
     * @param oldHasCity the hasCity property value to be removed.
     */
    void removeHasCity(String oldHasCity);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasCollisionType
     */
     
    /**
     * Gets all property values for the hasCollisionType property.<p>
     * 
     * @returns a collection of values for the hasCollisionType property.
     */
    Collection<? extends Integer> getHasCollisionType();

    /**
     * Checks if the class has a hasCollisionType property value.<p>
     * 
     * @return true if there is a hasCollisionType property value.
     */
    boolean hasHasCollisionType();

    /**
     * Adds a hasCollisionType property value.<p>
     * 
     * @param newHasCollisionType the hasCollisionType property value to be added
     */
    void addHasCollisionType(Integer newHasCollisionType);

    /**
     * Removes a hasCollisionType property value.<p>
     * 
     * @param oldHasCollisionType the hasCollisionType property value to be removed.
     */
    void removeHasCollisionType(Integer oldHasCollisionType);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasConstructionWorkerFlag
     */
     
    /**
     * Gets all property values for the hasConstructionWorkerFlag property.<p>
     * 
     * @returns a collection of values for the hasConstructionWorkerFlag property.
     */
    Collection<? extends Integer> getHasConstructionWorkerFlag();

    /**
     * Checks if the class has a hasConstructionWorkerFlag property value.<p>
     * 
     * @return true if there is a hasConstructionWorkerFlag property value.
     */
    boolean hasHasConstructionWorkerFlag();

    /**
     * Adds a hasConstructionWorkerFlag property value.<p>
     * 
     * @param newHasConstructionWorkerFlag the hasConstructionWorkerFlag property value to be added
     */
    void addHasConstructionWorkerFlag(Integer newHasConstructionWorkerFlag);

    /**
     * Removes a hasConstructionWorkerFlag property value.<p>
     * 
     * @param oldHasConstructionWorkerFlag the hasConstructionWorkerFlag property value to be removed.
     */
    void removeHasConstructionWorkerFlag(Integer oldHasConstructionWorkerFlag);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasConstructionZoneFlag
     */
     
    /**
     * Gets all property values for the hasConstructionZoneFlag property.<p>
     * 
     * @returns a collection of values for the hasConstructionZoneFlag property.
     */
    Collection<? extends Integer> getHasConstructionZoneFlag();

    /**
     * Checks if the class has a hasConstructionZoneFlag property value.<p>
     * 
     * @return true if there is a hasConstructionZoneFlag property value.
     */
    boolean hasHasConstructionZoneFlag();

    /**
     * Adds a hasConstructionZoneFlag property value.<p>
     * 
     * @param newHasConstructionZoneFlag the hasConstructionZoneFlag property value to be added
     */
    void addHasConstructionZoneFlag(Integer newHasConstructionZoneFlag);

    /**
     * Removes a hasConstructionZoneFlag property value.<p>
     * 
     * @param oldHasConstructionZoneFlag the hasConstructionZoneFlag property value to be removed.
     */
    void removeHasConstructionZoneFlag(Integer oldHasConstructionZoneFlag);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasCounty
     */
     
    /**
     * Gets all property values for the hasCounty property.<p>
     * 
     * @returns a collection of values for the hasCounty property.
     */
    Collection<? extends String> getHasCounty();

    /**
     * Checks if the class has a hasCounty property value.<p>
     * 
     * @return true if there is a hasCounty property value.
     */
    boolean hasHasCounty();

    /**
     * Adds a hasCounty property value.<p>
     * 
     * @param newHasCounty the hasCounty property value to be added
     */
    void addHasCounty(String newHasCounty);

    /**
     * Removes a hasCounty property value.<p>
     * 
     * @param oldHasCounty the hasCounty property value to be removed.
     */
    void removeHasCounty(String oldHasCounty);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasCrashID
     */
     
    /**
     * Gets all property values for the hasCrashID property.<p>
     * 
     * @returns a collection of values for the hasCrashID property.
     */
    Collection<? extends Integer> getHasCrashID();

    /**
     * Checks if the class has a hasCrashID property value.<p>
     * 
     * @return true if there is a hasCrashID property value.
     */
    boolean hasHasCrashID();

    /**
     * Adds a hasCrashID property value.<p>
     * 
     * @param newHasCrashID the hasCrashID property value to be added
     */
    void addHasCrashID(Integer newHasCrashID);

    /**
     * Removes a hasCrashID property value.<p>
     * 
     * @param oldHasCrashID the hasCrashID property value to be removed.
     */
    void removeHasCrashID(Integer oldHasCrashID);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasCrashSeverity
     */
     
    /**
     * Gets all property values for the hasCrashSeverity property.<p>
     * 
     * @returns a collection of values for the hasCrashSeverity property.
     */
    Collection<? extends Integer> getHasCrashSeverity();

    /**
     * Checks if the class has a hasCrashSeverity property value.<p>
     * 
     * @return true if there is a hasCrashSeverity property value.
     */
    boolean hasHasCrashSeverity();

    /**
     * Adds a hasCrashSeverity property value.<p>
     * 
     * @param newHasCrashSeverity the hasCrashSeverity property value to be added
     */
    void addHasCrashSeverity(Integer newHasCrashSeverity);

    /**
     * Removes a hasCrashSeverity property value.<p>
     * 
     * @param oldHasCrashSeverity the hasCrashSeverity property value to be removed.
     */
    void removeHasCrashSeverity(Integer oldHasCrashSeverity);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasCrashTime
     */
     
    /**
     * Gets all property values for the hasCrashTime property.<p>
     * 
     * @returns a collection of values for the hasCrashTime property.
     */
    Collection<? extends Integer> getHasCrashTime();

    /**
     * Checks if the class has a hasCrashTime property value.<p>
     * 
     * @return true if there is a hasCrashTime property value.
     */
    boolean hasHasCrashTime();

    /**
     * Adds a hasCrashTime property value.<p>
     * 
     * @param newHasCrashTime the hasCrashTime property value to be added
     */
    void addHasCrashTime(Integer newHasCrashTime);

    /**
     * Removes a hasCrashTime property value.<p>
     * 
     * @param oldHasCrashTime the hasCrashTime property value to be removed.
     */
    void removeHasCrashTime(Integer oldHasCrashTime);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasCrashYear
     */
     
    /**
     * Gets all property values for the hasCrashYear property.<p>
     * 
     * @returns a collection of values for the hasCrashYear property.
     */
    Collection<? extends Integer> getHasCrashYear();

    /**
     * Checks if the class has a hasCrashYear property value.<p>
     * 
     * @return true if there is a hasCrashYear property value.
     */
    boolean hasHasCrashYear();

    /**
     * Adds a hasCrashYear property value.<p>
     * 
     * @param newHasCrashYear the hasCrashYear property value to be added
     */
    void addHasCrashYear(Integer newHasCrashYear);

    /**
     * Removes a hasCrashYear property value.<p>
     * 
     * @param oldHasCrashYear the hasCrashYear property value to be removed.
     */
    void removeHasCrashYear(Integer oldHasCrashYear);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasDayOfWeek
     */
     
    /**
     * Gets all property values for the hasDayOfWeek property.<p>
     * 
     * @returns a collection of values for the hasDayOfWeek property.
     */
    Collection<? extends Integer> getHasDayOfWeek();

    /**
     * Checks if the class has a hasDayOfWeek property value.<p>
     * 
     * @return true if there is a hasDayOfWeek property value.
     */
    boolean hasHasDayOfWeek();

    /**
     * Adds a hasDayOfWeek property value.<p>
     * 
     * @param newHasDayOfWeek the hasDayOfWeek property value to be added
     */
    void addHasDayOfWeek(Integer newHasDayOfWeek);

    /**
     * Removes a hasDayOfWeek property value.<p>
     * 
     * @param oldHasDayOfWeek the hasDayOfWeek property value to be removed.
     */
    void removeHasDayOfWeek(Integer oldHasDayOfWeek);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasDeathCount
     */
     
    /**
     * Gets all property values for the hasDeathCount property.<p>
     * 
     * @returns a collection of values for the hasDeathCount property.
     */
    Collection<? extends Integer> getHasDeathCount();

    /**
     * Checks if the class has a hasDeathCount property value.<p>
     * 
     * @return true if there is a hasDeathCount property value.
     */
    boolean hasHasDeathCount();

    /**
     * Adds a hasDeathCount property value.<p>
     * 
     * @param newHasDeathCount the hasDeathCount property value to be added
     */
    void addHasDeathCount(Integer newHasDeathCount);

    /**
     * Removes a hasDeathCount property value.<p>
     * 
     * @param oldHasDeathCount the hasDeathCount property value to be removed.
     */
    void removeHasDeathCount(Integer oldHasDeathCount);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasHWNumber
     */
     
    /**
     * Gets all property values for the hasHWNumber property.<p>
     * 
     * @returns a collection of values for the hasHWNumber property.
     */
    Collection<? extends Integer> getHasHWNumber();

    /**
     * Checks if the class has a hasHWNumber property value.<p>
     * 
     * @return true if there is a hasHWNumber property value.
     */
    boolean hasHasHWNumber();

    /**
     * Adds a hasHWNumber property value.<p>
     * 
     * @param newHasHWNumber the hasHWNumber property value to be added
     */
    void addHasHWNumber(Integer newHasHWNumber);

    /**
     * Removes a hasHWNumber property value.<p>
     * 
     * @param oldHasHWNumber the hasHWNumber property value to be removed.
     */
    void removeHasHWNumber(Integer oldHasHWNumber);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasHWSystem
     */
     
    /**
     * Gets all property values for the hasHWSystem property.<p>
     * 
     * @returns a collection of values for the hasHWSystem property.
     */
    Collection<? extends Integer> getHasHWSystem();

    /**
     * Checks if the class has a hasHWSystem property value.<p>
     * 
     * @return true if there is a hasHWSystem property value.
     */
    boolean hasHasHWSystem();

    /**
     * Adds a hasHWSystem property value.<p>
     * 
     * @param newHasHWSystem the hasHWSystem property value to be added
     */
    void addHasHWSystem(Integer newHasHWSystem);

    /**
     * Removes a hasHWSystem property value.<p>
     * 
     * @param oldHasHWSystem the hasHWSystem property value to be removed.
     */
    void removeHasHWSystem(Integer oldHasHWSystem);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasIntersectionFlag
     */
     
    /**
     * Gets all property values for the hasIntersectionFlag property.<p>
     * 
     * @returns a collection of values for the hasIntersectionFlag property.
     */
    Collection<? extends Integer> getHasIntersectionFlag();

    /**
     * Checks if the class has a hasIntersectionFlag property value.<p>
     * 
     * @return true if there is a hasIntersectionFlag property value.
     */
    boolean hasHasIntersectionFlag();

    /**
     * Adds a hasIntersectionFlag property value.<p>
     * 
     * @param newHasIntersectionFlag the hasIntersectionFlag property value to be added
     */
    void addHasIntersectionFlag(Integer newHasIntersectionFlag);

    /**
     * Removes a hasIntersectionFlag property value.<p>
     * 
     * @param oldHasIntersectionFlag the hasIntersectionFlag property value to be removed.
     */
    void removeHasIntersectionFlag(Integer oldHasIntersectionFlag);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasLatitude
     */
     
    /**
     * Gets all property values for the hasLatitude property.<p>
     * 
     * @returns a collection of values for the hasLatitude property.
     */
    Collection<? extends Object> getHasLatitude();

    /**
     * Checks if the class has a hasLatitude property value.<p>
     * 
     * @return true if there is a hasLatitude property value.
     */
    boolean hasHasLatitude();

    /**
     * Adds a hasLatitude property value.<p>
     * 
     * @param newHasLatitude the hasLatitude property value to be added
     */
    void addHasLatitude(Object newHasLatitude);

    /**
     * Removes a hasLatitude property value.<p>
     * 
     * @param oldHasLatitude the hasLatitude property value to be removed.
     */
    void removeHasLatitude(Object oldHasLatitude);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasLightCondition
     */
     
    /**
     * Gets all property values for the hasLightCondition property.<p>
     * 
     * @returns a collection of values for the hasLightCondition property.
     */
    Collection<? extends Integer> getHasLightCondition();

    /**
     * Checks if the class has a hasLightCondition property value.<p>
     * 
     * @return true if there is a hasLightCondition property value.
     */
    boolean hasHasLightCondition();

    /**
     * Adds a hasLightCondition property value.<p>
     * 
     * @param newHasLightCondition the hasLightCondition property value to be added
     */
    void addHasLightCondition(Integer newHasLightCondition);

    /**
     * Removes a hasLightCondition property value.<p>
     * 
     * @param oldHasLightCondition the hasLightCondition property value to be removed.
     */
    void removeHasLightCondition(Integer oldHasLightCondition);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasLongitude
     */
     
    /**
     * Gets all property values for the hasLongitude property.<p>
     * 
     * @returns a collection of values for the hasLongitude property.
     */
    Collection<? extends Object> getHasLongitude();

    /**
     * Checks if the class has a hasLongitude property value.<p>
     * 
     * @return true if there is a hasLongitude property value.
     */
    boolean hasHasLongitude();

    /**
     * Adds a hasLongitude property value.<p>
     * 
     * @param newHasLongitude the hasLongitude property value to be added
     */
    void addHasLongitude(Object newHasLongitude);

    /**
     * Removes a hasLongitude property value.<p>
     * 
     * @param oldHasLongitude the hasLongitude property value to be removed.
     */
    void removeHasLongitude(Object oldHasLongitude);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasRRFlag
     */
     
    /**
     * Gets all property values for the hasRRFlag property.<p>
     * 
     * @returns a collection of values for the hasRRFlag property.
     */
    Collection<? extends Integer> getHasRRFlag();

    /**
     * Checks if the class has a hasRRFlag property value.<p>
     * 
     * @return true if there is a hasRRFlag property value.
     */
    boolean hasHasRRFlag();

    /**
     * Adds a hasRRFlag property value.<p>
     * 
     * @param newHasRRFlag the hasRRFlag property value to be added
     */
    void addHasRRFlag(Integer newHasRRFlag);

    /**
     * Removes a hasRRFlag property value.<p>
     * 
     * @param oldHasRRFlag the hasRRFlag property value to be removed.
     */
    void removeHasRRFlag(Integer oldHasRRFlag);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasSchoolBusFlag
     */
     
    /**
     * Gets all property values for the hasSchoolBusFlag property.<p>
     * 
     * @returns a collection of values for the hasSchoolBusFlag property.
     */
    Collection<? extends Integer> getHasSchoolBusFlag();

    /**
     * Checks if the class has a hasSchoolBusFlag property value.<p>
     * 
     * @return true if there is a hasSchoolBusFlag property value.
     */
    boolean hasHasSchoolBusFlag();

    /**
     * Adds a hasSchoolBusFlag property value.<p>
     * 
     * @param newHasSchoolBusFlag the hasSchoolBusFlag property value to be added
     */
    void addHasSchoolBusFlag(Integer newHasSchoolBusFlag);

    /**
     * Removes a hasSchoolBusFlag property value.<p>
     * 
     * @param oldHasSchoolBusFlag the hasSchoolBusFlag property value to be removed.
     */
    void removeHasSchoolBusFlag(Integer oldHasSchoolBusFlag);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasSchoolZoneFlag
     */
     
    /**
     * Gets all property values for the hasSchoolZoneFlag property.<p>
     * 
     * @returns a collection of values for the hasSchoolZoneFlag property.
     */
    Collection<? extends Integer> getHasSchoolZoneFlag();

    /**
     * Checks if the class has a hasSchoolZoneFlag property value.<p>
     * 
     * @return true if there is a hasSchoolZoneFlag property value.
     */
    boolean hasHasSchoolZoneFlag();

    /**
     * Adds a hasSchoolZoneFlag property value.<p>
     * 
     * @param newHasSchoolZoneFlag the hasSchoolZoneFlag property value to be added
     */
    void addHasSchoolZoneFlag(Integer newHasSchoolZoneFlag);

    /**
     * Removes a hasSchoolZoneFlag property value.<p>
     * 
     * @param oldHasSchoolZoneFlag the hasSchoolZoneFlag property value to be removed.
     */
    void removeHasSchoolZoneFlag(Integer oldHasSchoolZoneFlag);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasSpeedLimit
     */
     
    /**
     * Gets all property values for the hasSpeedLimit property.<p>
     * 
     * @returns a collection of values for the hasSpeedLimit property.
     */
    Collection<? extends Integer> getHasSpeedLimit();

    /**
     * Checks if the class has a hasSpeedLimit property value.<p>
     * 
     * @return true if there is a hasSpeedLimit property value.
     */
    boolean hasHasSpeedLimit();

    /**
     * Adds a hasSpeedLimit property value.<p>
     * 
     * @param newHasSpeedLimit the hasSpeedLimit property value to be added
     */
    void addHasSpeedLimit(Integer newHasSpeedLimit);

    /**
     * Removes a hasSpeedLimit property value.<p>
     * 
     * @param oldHasSpeedLimit the hasSpeedLimit property value to be removed.
     */
    void removeHasSpeedLimit(Integer oldHasSpeedLimit);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasSurfaceCondition
     */
     
    /**
     * Gets all property values for the hasSurfaceCondition property.<p>
     * 
     * @returns a collection of values for the hasSurfaceCondition property.
     */
    Collection<? extends Integer> getHasSurfaceCondition();

    /**
     * Checks if the class has a hasSurfaceCondition property value.<p>
     * 
     * @return true if there is a hasSurfaceCondition property value.
     */
    boolean hasHasSurfaceCondition();

    /**
     * Adds a hasSurfaceCondition property value.<p>
     * 
     * @param newHasSurfaceCondition the hasSurfaceCondition property value to be added
     */
    void addHasSurfaceCondition(Integer newHasSurfaceCondition);

    /**
     * Removes a hasSurfaceCondition property value.<p>
     * 
     * @param oldHasSurfaceCondition the hasSurfaceCondition property value to be removed.
     */
    void removeHasSurfaceCondition(Integer oldHasSurfaceCondition);



    /* ***************************************************
     * Property http://ontology.cybershare.utep.edu/smart-cities/Mobility#hasWeather
     */
     
    /**
     * Gets all property values for the hasWeather property.<p>
     * 
     * @returns a collection of values for the hasWeather property.
     */
    Collection<? extends Integer> getHasWeather();

    /**
     * Checks if the class has a hasWeather property value.<p>
     * 
     * @return true if there is a hasWeather property value.
     */
    boolean hasHasWeather();

    /**
     * Adds a hasWeather property value.<p>
     * 
     * @param newHasWeather the hasWeather property value to be added
     */
    void addHasWeather(Integer newHasWeather);

    /**
     * Removes a hasWeather property value.<p>
     * 
     * @param oldHasWeather the hasWeather property value to be removed.
     */
    void removeHasWeather(Integer oldHasWeather);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
